AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-app

  Sample SAM Template for todo-app
  
Globals:
  Function:
    Timeout: 100
    Runtime: nodejs16.x
    MemorySize: 128

Resources:
  GetTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/todo-list
      Handler: index.getTodoListHandler
      Layers:
        - !Ref LayerHelper
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTable
      Environment:
        Variables:
          TODO_TABLE: !Ref TodoTable
      Events:
        GetTodos:
          Type: Api
          Properties:
            Path: /todos
            Method: get

  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/todo-create
      Handler: index.createTodoHandler
      Layers:
        - !Ref LayerHelper
        - !Ref LayerTodoPut
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTable
      Environment:
        Variables:
          TODO_TABLE: !Ref TodoTable
      Events:
        CreateTodo:
          Type: Api
          Properties:
            Path: /todos
            Method: POST

  GetTodoByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/todo-by-id
      Handler: index.getTodoByIdHandler
      Layers:
        - !Ref LayerHelper
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTable
      Environment:
        Variables:
          TODO_TABLE: !Ref TodoTable
      Events:
        GetTodoById:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: get
  
  UpdateTodoByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/todo-update
      Handler: index.updateTodoHandler
      Layers:
        - !Ref LayerHelper
        - !Ref LayerTodoPut
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTable
      Environment:
        Variables:
          TODO_TABLE: !Ref TodoTable
      Events:
        UpdateTodo:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: PUT
  
  PatchTodoByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/todo-patch
      Handler: index.patchTodoHandler
      Layers:
        - !Ref LayerHelper
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTable
      Environment:
        Variables:
          TODO_TABLE: !Ref TodoTable
      Events:
        UpdateTodo:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: PATCH
  
  DeleteTodoByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/todo-delete
      Handler: index.deleteTodoHandler
      Layers:
        - !Ref LayerHelper
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTable
      Environment:
        Variables:
          TODO_TABLE: !Ref TodoTable
      Events:
        UpdateTodo:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: DELETE

  LayerHelper:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: LayerHelper
      Description: Helper layer for todo lambdas.
      ContentUri: "dist/layer_helper/"
      CompatibleRuntimes:
        - nodejs16.x

  LayerTodoPut:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: LayerTodoPut
      Description: Helper layer for todo lambdas.
      ContentUri: "dist/layer_todo-put/"
      CompatibleRuntimes:
        - nodejs16.x
  
  TodoTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  GetTodosApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos"
  GetTodosFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt GetTodosFunction.Arn
  GetTodosFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt GetTodosFunctionRole.Arn
